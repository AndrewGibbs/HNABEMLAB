var mboxCopyright = "Copyright 1996-2015. Adobe Systems Incorporated. All rights reserved.";var TNT = TNT || {};TNT.a = (function() { return { nestedMboxes: [], b: { companyName: "Test&amp;Target", isProduction: true, adminUrl: "http://admin10.testandtarget.omniture.com/admin", clientCode: "themathworksinc", serverHost: "themathworksinc.tt.omtrdc.net", mboxTimeout: 15000, mboxLoadedTimeout: 100, mboxFactoryDisabledTimeout: 30 * 60, bodyPollingTimeout: 16, bodyHidingEnabled: false, bodyHiddenStyle: "body{opacity:0}", sessionExpirationTimeout: 31 * 60, experienceManagerDisabledTimeout: 30 * 60, experienceManagerTimeout: 5000, visitorApiTimeout: 500, visitorApiPageDisplayTimeout: 500, overrideMboxEdgeServer: false, overrideMboxEdgeServerTimeout: 31 * 60, tntIdLifetime: 1209600, crossDomain: "enabled", trafficDuration: 10368000, trafficLevelPercentage: 100, clientSessionIdSupport: false, clientTntIdSupport: false, passPageParameters: true, usePersistentCookies: true, crossDomainEnabled: true, crossDomainXOnly: false, imsOrgId: "B1441C8B533095C00A490D4D@AdobeOrg", globalMboxName: "target-global-mbox", globalMboxLocationDomId: "", globalMboxAutoCreate: true, experienceManagerPluginUrl: "//cdn.tt.omtrdc.net/cdn/target.js", siteCatalystPluginName: "tt", mboxVersion: 61, optoutEnabled: false, mboxIsSupportedFunction: function() { return true; }, parametersFunction: function() { return ""; }, cookieDomainFunction: function() { return mboxCookiePageDomain(); } }, c: { d: "mboxPage", e: "mboxMCGVID", f: "mboxMCGLH", g: "mboxAAMB", h: "mboxMCAVID", i: "mboxMCSDID", j: "mboxCount", k: "mboxHost", l: "mboxFactoryId", m: "mboxPC", n: "screenHeight", o: "screenWidth", p: "browserWidth", q: "browserHeight", r: "browserTimeOffset", s: "colorDepth", t: "mboxXDomain", u: "mboxURL", v: "mboxReferrer", w: "mboxVersion", x: "mbox", y: "mboxId", z: "mboxDOMLoaded", A: "mboxTime", B: "scPluginVersion" }, C: { D: "mboxDisable", E: "mboxSession", F: "mboxEnv", G: "mboxDebug" }, H: { D: "disable", E: "session", m: "PC", I: "level", J: "check", G: "debug", K: "em-disabled", L: "mboxEdgeServer" }, M: { N: "default", O: "mbox", P: "mboxImported-", Q: 60000, R: "mboxDefault", S: "mboxMarker-", T: 250, B: 1, U: "mboxedge", V: "tt.omtrdc.net" } }}());TNT.a.W = {};(function(X) { var Y = {}.toString; function Z(_) { return _ === void(0); } function ab(_) { return _ === null; } function bb(_) { if (Z(_) || ab(_)) { return true; } return _.length === 0; } function cb(_) { return Y.call(_) === '[object Function]'; } function db(_) { return Y.call(_) === '[object Array]'; } function eb(_) { return Y.call(_) === '[object String]'; } function fb(_) { return Y.call(_) === '[object Object]'; } function gb(hb, ib) { var jb = hb.length, kb = -1; while (++kb < jb) { ib(hb[kb]); } } X.Z = Z; X.ab = ab; X.bb = bb; X.cb = cb; X.db = db; X.eb = eb; X.fb = fb; X.gb = gb;}(TNT.a.W));mboxUrlBuilder = function(lb, mb) { this.lb = lb; this.mb = mb; this.nb = []; this.ob = function(u) { return u; }; this.pb = null;};mboxUrlBuilder.prototype = { constructor: mboxUrlBuilder, addNewParameter: function (qb, _) { this.nb.push({name: qb, value: _}); return this; }, addParameterIfAbsent: function (qb, _) { if (!_) { return; } for (var rb = 0; rb < this.nb.length; rb++) { var sb = this.nb[rb]; if (sb.name === qb) { return this; } } this.checkInvalidCharacters(qb); return this.addNewParameter(qb, _); }, addParameter: function(qb, _) { this.checkInvalidCharacters(qb); for (var rb = 0; rb < this.nb.length; rb++) { var sb = this.nb[rb]; if (sb.name === qb) { sb.value = _; return this; } } return this.addNewParameter(qb, _); }, addParameters: function(nb) { if (!nb) { return this; } for (var rb = 0; rb < nb.length; rb++) { var tb = nb[rb]; var ub = tb.indexOf('='); if (ub === -1 || ub === 0) { continue; } this.addParameter(tb.substring(0, ub), tb.substring(ub + 1, tb.length)); } return this; }, setServerType: function(vb) { this.wb = vb; }, setBasePath: function(pb) { this.pb = pb; }, setUrlProcessAction: function(xb) { this.ob = xb; }, buildUrl: function() { var yb = TNT.a.zb(this.lb), Ab = this.pb ? this.pb : '/m2/' + this.mb + '/mbox/' + this.wb, u = "https://" + yb + Ab, Bb = []; for (var rb = 0; rb < this.nb.length; rb++) { var sb = this.nb[rb]; Bb.push(encodeURIComponent(sb.name) + '=' + encodeURIComponent(sb.value)); } u += u.indexOf('?') != -1 ? '&' + Bb.join('&') : '?' + Bb.join('&'); return this.Cb(this.ob(u)); }, getParameters: function() { return this.nb; }, setParameters: function(nb) { this.nb = nb; }, clone: function() { var Db = new mboxUrlBuilder(this.lb, this.mb); Db.setServerType(this.wb); Db.setBasePath(this.pb); Db.setUrlProcessAction(this.ob); for (var rb = 0; rb < this.nb.length; rb++) { Db.addParameter(this.nb[rb].name, this.nb[rb].value); } return Db; }, Cb: function(Eb) { return Eb.replace(/\"/g, '&quot;').replace(/>/g, '&gt;'); }, checkInvalidCharacters: function (qb) { var Fb = new RegExp('(\'|")'); if (Fb.exec(qb)) { throw "Parameter '" + qb + "' contains invalid characters"; } }};TNT.a.Gb = function() { var Hb = [], Ib = 0, Jb = []; function Kb(Lb, Mb) { Ib += 1; Hb[Lb] = Mb; Nb(); } function Nb() { var jb = Jb.length, kb = -1, Ob; if (Ib !== Hb.length || !Jb.length) { return; } while (++kb < jb) { Ob = Jb[kb]; Ob.fn.apply(Ob.ctx, Hb); } } return { Pb: function () { var Lb = Hb.length; Hb[Hb.length] = null; return function () { Kb(Lb, [].slice.call(arguments)); }; }, Qb: function (cb, context) { Jb.push({fn: cb, ctx: context}); Nb(); } };};(function(X, W, c, b, Rb) { var Sb = new RegExp("\\|MCMID\\|"), Tb = 'vst.', Ub = Tb + 'trk', Vb = Tb + 'trks'; function Wb(Xb, _) { return encodeURIComponent(Xb) + '=' + encodeURIComponent(_); } function Yb(Zb) { var _b, ac = function(Xb) { return Tb + Xb; }; if (!W.cb(Zb.getCustomerIDs)) { return []; } _b = Zb.getCustomerIDs(); if (!W.fb(_b)) { return []; } return X.bc(_b, [], ac); } function cc(Zb, dc) { var ec = Zb.trackingServer, fc = Zb.trackingServerSecure; if (ec) { dc.push(Wb(Ub, ec)); } if (fc) { dc.push(Wb(Vb, fc)); } } function gc(Zb, dc) { dc.push.apply(dc, Yb(Zb)); } function hc(Mb) { var dc = []; W.gb(Mb, function(hb) { dc.push(hb[0]); }); return dc; } function ic(jc) { return !W.bb(jc.value); } function kc(Gb, Zb, lc, Xb) { var mc; if (!W.cb(Zb[lc])) { return; } mc = Gb.Pb(); Zb[lc](function(_) { mc({key:Xb, value: _}); }, true); } function nc(Gb, Zb, oc) { oc(Gb, Zb, 'getMarketingCloudVisitorID', c.e); oc(Gb, Zb, 'getAudienceManagerBlob', c.g); oc(Gb, Zb, 'getAnalyticsVisitorID', c.h); oc(Gb, Zb, 'getAudienceManagerLocationHint', c.f); } function pc(Gb, Zb, qc, rc, sc) { if (rc) { window.clearTimeout(qc.id); sc({optout: rc, params: []}); tc(); return; } nc(Gb, Zb, kc); Gb.Qb(function() { if (qc.done) { return; } var c = hc([].slice.call(arguments)), dc = []; window.clearTimeout(qc.id); W.gb(c, function(jc) { if (ic(jc)) { dc.push(Wb(jc.key, jc.value)); } }); gc(Zb, dc); cc(Zb, dc); sc({optout: rc, params: dc}); tc(); }); } function uc(vc) { var Zb; if (W.bb(vc) || W.Z(window.Visitor) || !W.cb(window.Visitor.getInstance)) { return null; } Zb = window.Visitor.getInstance(vc); if (W.Z(Zb) || W.ab(Zb) || !Zb.isAllowed()) { return null; } return Zb; } function wc() { return !W.ab(uc(b.imsOrgId)); } function xc() { var Zb = uc(b.imsOrgId); if (W.ab(Zb)) { return false; } if (W.Z(Zb.cookieName)) { return false; } if (!W.cb(Zb.cookieRead)) { return false; } var yc = Zb.cookieRead(Zb.cookieName); if (W.bb(yc)) { return false; } return Sb.test(yc); } function zc(Zb, Ac) { return Ac && W.cb(Zb.isOptedOut) && !W.Z(window.Visitor.OptOut); } function Bc(Ac, sc) { var vc = b.imsOrgId, Cc = b.visitorApiTimeout, Gb = Rb(), qc = {id: NaN, done: false}, Zb; Zb = uc(vc); if (W.ab(Zb)) { sc(null); return; } Dc(); qc.id = window.setTimeout(function() { qc.done = true; sc(null); tc(); }, Cc); if (zc(Zb, Ac)) { Zb.isOptedOut(function(rc) { pc(Gb, Zb, qc, rc, sc); }, window.Visitor.OptOut.GLOBAL, true); } else { pc(Gb, Zb, qc, false, sc); } } function Ec(Zb, lc, Xb, Fc) { if (Zb[lc]) { var _ = Zb[lc](); if (_) { Fc.push(Wb(Xb, _)); } } } function Gc() { var Zb = uc(b.imsOrgId), dc = []; Ec(Zb, 'getMarketingCloudVisitorID', c.e, dc); Ec(Zb, 'getAudienceManagerBlob', c.g, dc); Ec(Zb, 'getAnalyticsVisitorID', c.h, dc); Ec(Zb, 'getAudienceManagerLocationHint', c.f, dc); gc(Zb, dc); cc(Zb, dc); return dc; } function Hc(x) { var vc = b.imsOrgId, mb = b.clientCode, Zb = uc(vc); if (W.ab(Zb) || !W.cb(Zb.getSupplementalDataID)) { return ''; } return Zb.getSupplementalDataID('mbox:' + mb + ':' + x); } function Dc() { if (!b.bodyHidingEnabled) { return; } if (!b.globalMboxAutoCreate) { return } var Ic = document.getElementsByTagName('head')[0]; var Jc = document.createElement('style'); Jc.type = 'text/css'; Jc.id = 'at-id-body-style'; if (Jc.styleSheet){ Jc.styleSheet.cssText = css; } else { Jc.appendChild(document.createTextNode(b.bodyHiddenStyle)); } if (Ic) { Ic.appendChild(Jc); } } function tc() { if (!b.bodyHidingEnabled) { return; } if (!b.globalMboxAutoCreate) { return } window.setTimeout(function() { var Ic = document.getElementsByTagName('head')[0]; var Jc = document.getElementById('at-id-body-style'); if (Ic && Jc) { Ic.removeChild(Jc); } }, b.visitorApiPageDisplayTimeout); } X.wc = wc; X.xc = xc; X.Bc = Bc; X.Gc = Gc; X.Hc = Hc;}(TNT.a, TNT.a.W, TNT.a.c, TNT.a.b, TNT.a.Gb));mboxStandardFetcher = function() { };mboxStandardFetcher.prototype = { constructor: mboxStandardFetcher, getType: function() { return 'standard'; }, fetch: function(Kc) { Kc.setServerType(this.getType()); document.write('<' + 'scr' + 'ipt src="' + Kc.buildUrl() + '"><' + '\/scr' + 'ipt>'); }, cancel: function() { }};mboxAjaxFetcher = function() { };mboxAjaxFetcher.prototype = { constructor: mboxAjaxFetcher, getType: function() { return 'ajax'; }, fetch: function(Kc) { Kc.setServerType(this.getType()); var Ic = document.getElementsByTagName('head')[0], Lc = document.createElement('script'); Lc.src = Kc.buildUrl(); Ic.appendChild(Lc); }, cancel: function() {}};(function(X){ function Mc() {} Mc.prototype = { constructor: Mc, getType: function() { return 'ajax'; }, fetch: function(Kc) { Kc.setServerType(this.getType()); document.write('<' + 'scr' + 'ipt src="' + Kc.buildUrl() +'"><' + '\/scr' + 'ipt>'); }, cancel: function() { } }; X.Mc = Mc;}(TNT.a));mboxMap = function() { this.Nc = {}; this.Oc = [];};mboxMap.prototype = { constructor: mboxMap, put: function(Xb, _) { if (!this.Nc[Xb]) { this.Oc[this.Oc.length] = Xb; } this.Nc[Xb] = _; }, get: function(Xb) { return this.Nc[Xb]; }, remove: function(Xb) { var Pc = []; this.Nc[Xb] = undefined; for (var i = 0; i < this.Oc.length; i++) { if (this.Oc[i] !== Xb) { Pc.push(this.Oc[i]); } } this.Oc = Pc; }, each: function(xb) { for (var rb = 0; rb < this.Oc.length; rb++ ) { var Xb = this.Oc[rb]; var _ = this.Nc[Xb]; if (_) { var dc = xb(Xb, _); if (dc === false) { break; } } } }, isEmpty: function() { return this.Oc.length === 0; }};mboxList = function() { this.Qc = [];};mboxList.prototype = { constructor: mboxList, add: function(Rc) { if (!Rc) { return; } this.Qc.push(Rc); }, get: function(x) { var dc = new mboxList(); for (var rb = 0; rb < this.Qc.length; rb++) { var Rc = this.Qc[rb]; if (Rc.getName() === x) { dc.add(Rc); } } return dc; }, getById: function(Lb) { return this.Qc[Lb]; }, length: function() { return this.Qc.length; }, each: function(xb) { var W = TNT.a.W; if (!W.cb(xb)) { throw 'Action must be a function, was: ' + typeof(xb); } for (var rb = 0; rb < this.Qc.length; rb++) { xb(this.Qc[rb]); } }};mboxSignaler = function(Sc) { this.Sc = Sc;};mboxSignaler.prototype = { constructor: mboxSignaler, signal: function(Tc, x ) { if (!this.Sc.isEnabled()) { return; } var Uc = mboxSignaler.Vc(), Wc = this.Xc(this.Sc.Yc(x)); Uc.appendChild(Wc); var Mb = [].slice.call(arguments, 1), Rc = this.Sc.create(x, Mb, Wc), Kc = Rc.getUrlBuilder(); Kc.addParameter(TNT.a.c.d, mboxGenerateId()); Rc.setFetcher(new mboxAjaxFetcher()); Rc.load(); }, Xc: function(Zc) { var dc = document.createElement('div'); dc.id = Zc; dc.style.visibility = 'hidden'; dc.style.display = 'none'; return dc; }};mboxSignaler.Vc = function() { return document.body;};mboxLocatorDefault = function(_c) { this._c = _c; document.write('<div id="' + this._c + '" style="visibility:hidden;display:none">&nbsp;<\/div>');};mboxLocatorDefault.prototype = { constructor: mboxLocatorDefault, locate: function() { var ad = 1, bd = document.getElementById(this._c); while (bd) { if (bd.nodeType === ad && bd.className && bd.className.indexOf('mboxDefault') !== -1) { return bd; } bd = bd.previousSibling; } return null; }, force: function() { var cd = document.getElementById(this._c), dd = document.createElement('div'); dd.className = 'mboxDefault'; if (cd) { cd.parentNode.insertBefore(dd, cd); } return dd; }};mboxLocatorNode = function(bd) { this.bd = bd;};mboxLocatorNode.prototype = { constructor: mboxLocatorNode, locate: function() { return typeof(this.bd) === 'string' ? document.getElementById(this.bd) : this.bd; }, force: function() { return null; }};mboxOfferContent = function() { this.ed = function() {};};mboxOfferContent.prototype = { constructor: mboxOfferContent, show: function (Rc) { var dc = Rc.showContent(document.getElementById(Rc.getImportName())); if (dc === 1) { this.ed(); } return dc; }, setOnLoad: function(ed) { this.ed = ed; }};mboxOfferAjax = function(fd) { this.fd = fd; this.ed = function() {};};mboxOfferAjax.prototype = { constructor: mboxOfferAjax, setOnLoad: function(ed) { this.ed = ed; }, show: function(Rc) { var gd = document.createElement('div'), dc; gd.id = Rc.getImportName(); gd.innerHTML = this.fd; dc = Rc.showContent(gd); if (dc === 1) { this.ed(); } return dc; }};mboxOfferDefault = function() { this.ed = function() {};};mboxOfferDefault.prototype = { constructor: mboxOfferDefault, show: function(Rc) { var dc = Rc.hide(); if (dc === 1) { this.ed(); } return dc; }, setOnLoad: function(ed) { this.ed = ed; }};mboxCookieManager = function(qb, hd) { this.qb = qb; this.id = TNT.a.H.J; this.jd = TNT.a.b.crossDomainXOnly; this.kd = TNT.a.H.D; this.ld = TNT.a.b.usePersistentCookies; this.md = new mboxMap(); this.hd = hd === '' || hd.indexOf('.') === -1 ? '' : '; domain=' + hd; this.loadCookies();};mboxCookieManager.prototype = { constructor: mboxCookieManager, isEnabled: function() { this.setCookie(this.id, 'true', 60); this.loadCookies(); return this.getCookie(this.id) == 'true'; }, setCookie: function(qb, _, nd) { if (typeof qb == 'undefined' || typeof _ == 'undefined' || typeof nd == 'undefined') { return; } var od = Math.ceil(nd + new Date().getTime() / 1000), pd = mboxCookieManager.qd(qb, encodeURIComponent(_), od); this.md.put(qb, pd); this.saveCookies(); }, getCookie: function(qb) { var pd = this.md.get(qb); return pd ? decodeURIComponent(pd.value) : null; }, deleteCookie: function(qb) { this.md.remove(qb); this.saveCookies(); }, getCookieNames: function(rd) { var sd = []; this.md.each(function(qb, pd) { if (qb.indexOf(rd) === 0) { sd[sd.length] = qb; } }); return sd; }, saveCookies: function() { var td = this, ud = [], vd = 0; this.md.each(function(qb, pd) { if(!td.jd || qb === td.kd) { ud[ud.length] = mboxCookieManager.wd(pd); if (vd < pd.expireOn) { vd = pd.expireOn; } } }); var xd = new Date(vd * 1000); var Bb = []; Bb.push(this.qb, '=', ud.join('|')); if (td.ld) { Bb.push('; expires=', xd.toGMTString()); } Bb.push('; path=/', this.hd); document.cookie = Bb.join(""); }, loadCookies: function() { var yd = mboxCookieManager.zd(this.qb), Ad = mboxCookieManager.Bd(yd), Cd = Math.ceil(new Date().getTime() / 1000); this.md = new mboxMap(); for (var rb = 0; rb < Ad.length; rb++) { var pd = mboxCookieManager.Dd(Ad[rb]); if (Cd > pd.expireOn) { continue; } this.md.put(pd.name, pd); } }};mboxCookieManager.wd = function(pd) { return pd.name + '#' + pd.value + '#' + pd.expireOn;};mboxCookieManager.Dd = function(Y) { var Bb = Y.split('#'); return mboxCookieManager.qd(Bb[0], Bb[1], Bb[2]);};mboxCookieManager.qd = function(qb, _, od) { return {name: qb, value: _, expireOn: od};};mboxCookieManager.zd = function(qb) { var result = new RegExp('(^|; )' + encodeURIComponent(qb) + '=([^;]*)').exec(document.cookie); return result ? result[2] : null;};mboxCookieManager.Bd = function(Y) { if (!Y) { return []; } return Y.split('|');};mboxSession = function(Ed, Fd, Gd, Hd, Id) { var Jd = window.mboxForceSessionId; this.Gd = Gd; this.Hd = Hd; this.Id = Id; this.Zc = typeof(Jd) !== 'undefined' ? Jd : mboxGetPageParameter(Fd, true); this.Zc = this.Zc || Id.getCookie(Gd) || Ed; this.Id.setCookie(Gd, this.Zc, Hd);};mboxSession.prototype = { constructor: mboxSession, getId: function() { return this.Zc; }, forceId: function(Kd) { this.Zc = Kd; this.Id.setCookie(this.Gd, this.Zc, this.Hd); }};mboxPC = function(Gd, Hd, Id) { var Ld = window.mboxForcePCId; this.Gd = Gd; this.Hd = Hd; this.Id = Id; this.Zc = typeof(Ld) != 'undefined' ? Ld: Id.getCookie(Gd); if (this.Zc) { Id.setCookie(Gd, this.Zc, Hd); }};mboxPC.prototype = { constructor: mboxPC, getId: function() { return this.Zc; }, forceId: function(Kd) { if (this.Zc === Kd) { return false; } this.Zc = Kd; this.Id.setCookie(this.Gd, this.Zc, this.Hd); return true; }};(function(X, W, H, b, M) { var Md = new RegExp(".*\\.(\\d+)_\\d+"); function zb(Od) { var Pd = Md.exec(Od); if (Pd && Pd.length === 2) { return M.U + Pd[1] + '.' + M.V; } return ''; } function Qd(Id, Rd) { var yb = zb(Rd); if (!W.bb(yb)) { Id.setCookie(H.L, yb, b.overrideMboxEdgeServerTimeout); } } function Sd(Td, Id) { this.Td= Td; this.Id = Id; Qd(Id, Td.getId()); } Sd.prototype = { constructor: Sd, getId: function() { return this.Td.getId(); }, forceId: function(Kd) { if (!this.Td.forceId(Kd)) { return false; } Qd(this.Id, Kd); return true; } }; X.Sd = Sd;}(TNT.a, TNT.a.W, TNT.a.H, TNT.a.b, TNT.a.M));mboxGetPageParameter = function(qb, Ud) { Ud = Ud || false; var Vd; if (Ud) { Vd = new RegExp("\\?[^#]*" + qb + "=([^\&;#]*)", "i"); } else { Vd = new RegExp("\\?[^#]*" + qb + "=([^\&;#]*)"); } var dc = null; var Wd = Vd.exec(document.location); if (Wd && Wd.length >= 2) { dc = Wd[1]; } return dc;};mboxCookiePageDomain = function() { var hd = (/([^:]*)(:[0-9]{0,5})?/).exec(document.location.host)[1]; var Xd = /[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/; if (!Xd.exec(hd)) { var Yd = (/([^\.]+\.[^\.]{3}|[^\.]+\.[^\.]+\.[^\.]{2})$/).exec(hd); if (Yd) { hd = Yd[0]; if (hd.indexOf("www.") === 0) { hd=hd.substr(4); } } } return hd ? hd: "";};mboxShiftArray = function(Zd) { var dc = []; for (var rb = 1; rb < Zd.length; rb++) { dc[dc.length] = Zd[rb]; } return dc;};mboxGenerateId = function() { var s = [], hex = '0123456789abcdef'; for (var i = 0; i < 36; i++) { s[i] = hex.substr(Math.floor(Math.random() * 0x10), 1); } s[14] = '4'; s[19] = hex.substr((s[19] & 0x3) | 0x8, 1); s[8] = s[13] = s[18] = s[23] = '-'; return s.join('').replace(/-/g, '');};mboxScreenHeight = function() { return screen.height;};mboxScreenWidth = function() { return screen.width;};mboxBrowserWidth = function() { return (window.innerWidth) ? window.innerWidth : document.documentElement ? document.documentElement.clientWidth : document.body.clientWidth;};mboxBrowserHeight = function() { return (window.innerHeight) ? window.innerHeight : document.documentElement ? document.documentElement.clientHeight : document.body.clientHeight;};mboxBrowserTimeOffset = function() { return -new Date().getTimezoneOffset();};mboxScreenColorDepth = function() { return screen.pixelDepth;};mbox = function(qb, Zc, Kc, _d, ae, Sc) { this.be = null; this.ce = 0; this.de = _d; this.ae = ae; this.ee = null; this.fe = new mboxOfferContent(); this.dd = null; this.Kc = Kc; this.message = ''; this.ge = {}; this.he = 0; this.ie = 5; this.Zc = Zc; this.qb = qb; this.je(); Kc.addParameter(TNT.a.c.x, qb); Kc.addParameter(TNT.a.c.y, Zc); this.ke = function() {}; this.ed = function() {}; this.le = null; this.me = document.documentMode >= 10 && !Sc.isDomLoaded(); if (this.me) { this.ne = TNT.a.nestedMboxes; this.ne.push(this.qb); }};mbox.prototype.getId = function() { return this.Zc;};mbox.prototype.je = function() { var maxLength = TNT.a.M.T; if (this.qb.length > maxLength) { throw "Mbox Name " + this.qb + " exceeds max length of " + maxLength + " characters."; } else if (this.qb.match(/^\s+|\s+$/g)) { throw "Mbox Name " + this.qb + " has leading/trailing whitespace(s)."; }};mbox.prototype.getName = function() { return this.qb;};mbox.prototype.getParameters = function() { var nb = this.Kc.getParameters(); var dc = []; for (var rb = 0; rb < nb.length; rb++) { if (nb[rb].name.indexOf('mbox') !== 0) { dc[dc.length] = nb[rb].name + '=' + nb[rb].value; } } return dc;};mbox.prototype.setOnLoad = function(xb) { this.ed = xb; return this;};mbox.prototype.setMessage = function(oe) { this.message = oe; return this;};mbox.prototype.setOnError = function(ke) { this.ke = ke; return this;};mbox.prototype.setFetcher = function(pe) { if (this.ee) { this.ee.cancel(); } this.ee = pe; return this;};mbox.prototype.getFetcher = function() { return this.ee;};function qe(Kc, Rc) { var re = TNT.a, b = re.b, se = b.mboxTimeout; if (re.wc() && re.xc()) { Kc.addParameters(re.Gc()); } Rc.ee.fetch(Kc); Rc.te = setTimeout(function() { Rc.ke('browser timeout', Rc.ee.getType()); }, se);}function ue(Rc) { var le = Rc.getDefaultDiv(); if (le) { Rc.ve(Rc.getDefaultDiv()); }}function we(Kc, Rc, Ac) { var re = TNT.a; Rc.setFetcher(new mboxAjaxFetcher()); re.Bc(Ac, function(xe) { if (xe === null) { qe(Kc, Rc); return; } if (Ac && xe.optout) { ue(Rc); return; } Kc.addParameters(xe.params); qe(Kc, Rc); });}mbox.prototype.load = function(nb) { var td = this, Kc = td.Kc, re = TNT.a, b = re.b, Ac = b.optoutEnabled; if (td.ee === null) { return td; } td.cancelTimeout(); td.ce = 0; if (nb && nb.length > 0) { Kc = td.Kc.clone().addParameters(nb); } if (Ac && re.wc()) { we(Kc, td, Ac); return td; } var wc = re.wc(); if (wc && !re.xc()) { we(Kc, td, false); return td; } qe(Kc, td); return td;};mbox.prototype.loaded = function() { this.cancelTimeout(); if (!this.activate() && this.he < this.ie) { var td = this; setTimeout(function() { td.loaded(); }, TNT.a.b.mboxLoadedTimeout); }};mbox.prototype.activate = function() { if (this.ce) { return this.ce; } if (this.me && this.ne[this.ne.length - 1] !== this.qb) { return this.ce; } if (this.show()) { this.cancelTimeout(); this.ce = 1; } if (this.me) { this.ne.pop(); } return this.ce;};mbox.prototype.isActivated = function() { return this.ce;};mbox.prototype.setOffer = function(fe) { var ye = fe && fe.show && fe.setOnLoad; if (!ye) { throw 'Invalid offer'; } var ze = TNT.a.b.globalMboxName === this.qb; ze = ze && fe instanceof mboxOfferDefault; ze = ze && this.ee !== null; ze = ze && this.ee.getType() === 'ajax'; if (!ze) { this.fe = fe; return this; } var Ae = this.fe.ed; this.fe = fe; this.fe.setOnLoad(Ae); return this;};mbox.prototype.getOffer = function() { return this.fe;};mbox.prototype.show = function() { return this.fe.show(this);};mbox.prototype.showContent = function(fd) { if (!mbox.Be(fd)) { return 0; } this.dd = mbox.Ce(this, this.dd); if (this.dd === null) { return 0; } if (!mbox.De(document.body, this.dd)) { return 0; } if (this.dd === fd) { this.ve(this.dd); this.ed(); return 1; } this.Ee(this.dd); this.Ee(fd); mbox.Fe(this, fd); this.ve(this.dd); this.ed(); return 1;};mbox.Be = function(fd) { return fd !== undefined && fd !== null;};mbox.De = function(Ge, He) { var DOCUMENT_POSITION_CONTAINED_BY = 16; var Ie = Ge.contains !== undefined; if (Ie) { return Ge !== He && Ge.contains(He); } else { return Boolean(Ge.compareDocumentPosition(He) & DOCUMENT_POSITION_CONTAINED_BY); }};mbox.Ce = function(Rc, dd) { if (dd !== undefined && dd !== null && mbox.De(document.body, dd)) { return dd; } return Rc.getDefaultDiv();};mbox.Fe = function(Rc, Je) { Rc.dd.parentNode.replaceChild(Je, Rc.dd); Rc.dd = Je;};mbox.prototype.hide = function() { return this.showContent(this.getDefaultDiv());};mbox.prototype.finalize = function() { if (!this.getDefaultDiv()) { this.de.force(); } if (!this.getDiv()) { this.dd = mbox.Ce(this, this.dd); } this.Ke(); this.setFetcher(new mboxAjaxFetcher()); this.cancelTimeout(); this.ed();};mbox.prototype.cancelTimeout = function() { if (this.te) { clearTimeout(this.te); } if (this.ee) { this.ee.cancel(); }};mbox.prototype.getDiv = function() { return this.dd;};mbox.prototype.getDefaultDiv = function() { if (this.le === null) { this.le = this.de.locate(); } return this.le;};mbox.prototype.setEventTime = function(Le) { this.ge[Le] = (new Date()).getTime();};mbox.prototype.getEventTimes = function() { return this.ge;};mbox.prototype.getImportName = function() { return this.ae;};mbox.prototype.getURL = function() { return this.Kc.buildUrl();};mbox.prototype.getUrlBuilder = function() { return this.Kc;};mbox.prototype.Me = function(dd) { return dd.style.display != 'none';};mbox.prototype.ve = function(dd) { this.Ne(dd, true);};mbox.prototype.Ee = function(dd) { this.Ne(dd, false);};mbox.prototype.Ne = function(dd, Oe) { dd.style.visibility = Oe ? "visible" : "hidden"; dd.style.display = Oe ? "block" : "none";};mbox.prototype.Ke = function() { this.me = false;};mbox.prototype.relocateDefaultDiv = function() { this.le = this.de.locate();};function Pe(Sc) { Sc.getMboxes().each(function(Rc) { Rc.finalize(); });}mboxFactory = function(yb, mb, Qe) { var re = TNT.a; var b = re.b; var W = re.W; var H = re.H; var C = re.C; var M = re.M; var Re = b.mboxVersion; this.Se = false; this.Qe = Qe; this.Qc = new mboxList(); mboxFactories.put(Qe, this); this.Te = b.mboxIsSupportedFunction() && typeof (window.attachEvent || document.addEventListener || window.addEventListener) != 'undefined'; this.Ue = this.Te && mboxGetPageParameter(C.D, true) === null; var Ve = Qe == M.N; var Gd = M.O + (Ve ? '' : ('-' + Qe)); this.Id = new mboxCookieManager(Gd, b.cookieDomainFunction()); if (!b.crossDomainXOnly) { this.Ue = this.Ue && this.Id.isEnabled(); } this.Ue = this.Ue && W.ab(this.Id.getCookie(H.D)) && W.ab(this.Id.getCookie(H.K)); if (this.isAdmin()) { this.enable(); } this.We(); this.Xe = mboxGenerateId(); this.Ye = mboxScreenHeight(); this.Ze = mboxScreenWidth(); this._e = mboxBrowserWidth(); this.af = mboxBrowserHeight(); this.bf = mboxScreenColorDepth(); this.cf = mboxBrowserTimeOffset(); this.df = new mboxSession(this.Xe, C.E, H.E, b.sessionExpirationTimeout, this.Id); var Td = new mboxPC(H.m, b.tntIdLifetime, this.Id); this.ef = b.overrideMboxEdgeServer ? new re.Sd(Td, this.Id) : Td; this.Kc = new mboxUrlBuilder(yb, mb); this.ff(this.Kc, Ve, Re); this.gf = new Date().getTime(); this.hf = this.gf; var td = this; this.addOnLoad(function() { td.hf = new Date().getTime(); }); if (this.Te) { this.addOnLoad(function() { td.Se = true; Pe(td); TNT.a.nestedMboxes = []; }); if (this.Ue) { this.limitTraffic(b.trafficLevelPercentage, b.trafficDuration); this.jf(); this.kf = new mboxSignaler(this); } else { if (!b.isProduction) { if (this.isAdmin()) { if (!this.isEnabled()) { alert("mbox disabled, probably due to timeout\n" + "Reset your cookies to re-enable\n(this message will only appear in administrative mode)"); } else { alert("It looks like your browser will not allow " + b.companyName + " to set its administrative cookie. To allow setting the" + " cookie please lower the privacy settings of your browser.\n" + "(this message will only appear in administrative mode)"); } } } } }};mboxFactory.prototype.forcePCId = function(Kd) { if (!TNT.a.b.clientTntIdSupport) { return; } if (this.ef.forceId(Kd)) { this.df.forceId(mboxGenerateId()); }};mboxFactory.prototype.forceSessionId = function(Kd) { if (!TNT.a.b.clientSessionIdSupport) { return; } this.df.forceId(Kd);};mboxFactory.prototype.isEnabled = function() { return this.Ue;};mboxFactory.prototype.getDisableReason = function() { return this.Id.getCookie(TNT.a.H.D);};mboxFactory.prototype.isSupported = function() { return this.Te;};mboxFactory.prototype.disable = function(nd, lf) { if (typeof nd == 'undefined') { nd = 60 * 60; } if (typeof lf == 'undefined') { lf = 'unspecified'; } if (!this.isAdmin()) { this.Ue = false; this.Id.setCookie(TNT.a.H.D, lf, nd); }};mboxFactory.prototype.enable = function() { this.Ue = true; this.Id.deleteCookie(TNT.a.H.D);};mboxFactory.prototype.isAdmin = function() { return document.location.href.indexOf(TNT.a.C.F) != -1;};mboxFactory.prototype.limitTraffic = function(mf, nd) { if (TNT.a.b.trafficLevelPercentage != 100) { if (mf == 100) { return; } var nf = true; if (parseInt(this.Id.getCookie(TNT.a.H.I)) != mf) { nf = (Math.random() * 100) <= mf; } this.Id.setCookie(TNT.a.H.I, mf, nd); if (!nf) { this.disable(60 * 60, 'limited by traffic'); } }};mboxFactory.prototype.addOnLoad = function(of) { if (this.isDomLoaded()) { of(); } else { var pf = false; var qf = function() { if (pf) { return; } pf = true; of(); }; this.rf.push(qf); if (this.isDomLoaded() && !pf) { qf(); } }};mboxFactory.prototype.getEllapsedTime = function() { return this.hf - this.gf;};mboxFactory.prototype.getEllapsedTimeUntil = function(A) { return A - this.gf;};mboxFactory.prototype.getMboxes = function() { return this.Qc;};mboxFactory.prototype.get = function(x, y) { return this.Qc.get(x).getById(y || 0);};mboxFactory.prototype.update = function(x, nb) { var re = TNT.a, c = re.c; if (!this.isEnabled()) { return; } var td = this; if (!this.isDomLoaded()) { this.addOnLoad(function() { td.update(x, nb); }); return; } if (this.Qc.get(x).length() === 0) { throw "Mbox " + x + " is not defined"; } this.Qc.get(x).each(function(Rc) { var Kc = Rc.getUrlBuilder(); Kc.addParameter(c.d, mboxGenerateId()); td.sf(Kc, x); Rc.load(nb); });};mboxFactory.prototype.setVisitorIdParameters = function(Kc, x) { this.sf(Kc, x);};mboxFactory.prototype.create = function(x, nb, tf) { return this.uf(x, nb, tf);};mboxFactory.prototype.vf = function(x, nb, tf) { return this.uf(x, nb, tf);};mboxFactory.prototype.uf = function(x, nb, tf) { if (!this.isSupported()) { return null; } var wf = new Date(); var A = wf.getTime() - (wf.getTimezoneOffset() * TNT.a.M.Q); var Kc = this.Kc.clone(); Kc.addParameter(TNT.a.c.j, this.Qc.length() + 1); Kc.addParameter(TNT.a.c.A, A); Kc.addParameters(nb); this.sf(Kc, x); var y, de, Rc; if (tf) { de = new mboxLocatorNode(tf); } else { if (this.Se) { throw 'The page has already been loaded, can\'t write marker'; } de = new mboxLocatorDefault(this.Yc(x)); } try { y = this.Qc.get(x).length(); Rc = new mbox(x, y, Kc, de, this.xf(x), this); if (this.Ue) { Rc.setFetcher(this.Se ? new mboxAjaxFetcher() : new mboxStandardFetcher()); } var td = this; Rc.setOnError(function(oe, vb) { Rc.setMessage(oe); Rc.activate(); if (!Rc.isActivated()) { td.disable(TNT.a.b.mboxFactoryDisabledTimeout, oe); window.location.reload(false); } }); this.Qc.add(Rc); } catch (yf) { this.disable(); throw 'Failed creating mbox "' + x + '", the error was: ' + yf; } return Rc;};mboxFactory.prototype.zf = function(Kc) { var m = this.ef.getId(); if (m) { Kc.addParameter(TNT.a.c.m, m); }};mboxFactory.prototype.Af = function(Kc, x) { var Bf = !TNT.isAutoCreateGlobalMbox() && TNT.getGlobalMboxName() === x; if (Bf) { Kc.addParameters(TNT.getTargetPageParameters()); }};mboxFactory.prototype.Cf = function(Kc, x) { var re = TNT.a, Df = re.c.i, i = re.Hc(x); if (i) { Kc.addParameter(Df, i); }};mboxFactory.prototype.Ef = function(Kc) { var re = TNT.a; if (re.wc() && re.xc()) { Kc.addParameters(re.Gc()); }};mboxFactory.prototype.sf = function(Kc, x) { this.zf(Kc); this.Af(Kc, x); this.Cf(Kc, x); this.Ef(Kc, x);};mboxFactory.prototype.getCookieManager = function() { return this.Id;};mboxFactory.prototype.getPageId = function() { return this.Xe;};mboxFactory.prototype.getPCId = function() { return this.ef;};mboxFactory.prototype.getSessionId = function() { return this.df;};mboxFactory.prototype.getSignaler = function() { return this.kf;};mboxFactory.prototype.getUrlBuilder = function() { return this.Kc;};mboxFactory.prototype.Ff = function(x) { return this.Qe + '-' + x + '-' + this.Qc.get(x).length();};mboxFactory.prototype.Yc = function(x) { return TNT.a.M.S + this.Ff(x);};mboxFactory.prototype.xf = function(x) { return TNT.a.M.P + this.Ff(x);};mboxFactory.prototype.ff = function(Kc, Ve, Re) { Kc.addParameter(TNT.a.c.k, document.location.hostname); Kc.addParameter(TNT.a.c.d, this.Xe); Kc.addParameter(TNT.a.c.n, this.Ye); Kc.addParameter(TNT.a.c.o, this.Ze); Kc.addParameter(TNT.a.c.p, this._e); Kc.addParameter(TNT.a.c.q, this.af); Kc.addParameter(TNT.a.c.r, this.cf); Kc.addParameter(TNT.a.c.s, this.bf); Kc.addParameter(TNT.a.C.E, this.df.getId()); if (!Ve) { Kc.addParameter(TNT.a.c.l, this.Qe); } if (TNT.a.b.crossDomainEnabled) { Kc.addParameter(TNT.a.c.t, TNT.a.b.crossDomain); } var c = TNT.getClientMboxExtraParameters(); if (c) { Kc.addParameters(c.split('&')); } Kc.setUrlProcessAction(function(u) { if (TNT.a.b.passPageParameters) { u += '&'; u += TNT.a.c.u; u += '=' + encodeURIComponent(document.location); var v = encodeURIComponent(document.referrer); if (u.length + v.length < 2000) { u += '&'; u += TNT.a.c.v; u += '=' + v; } } u += '&'; u += TNT.a.c.w; u += '=' + Re; return u; });};mboxFactory.prototype.jf = function() { document.write('<style>.' + TNT.a.M.R + ' { visibility:hidden; }</style>');};mboxFactory.prototype.isDomLoaded = function() { return this.Se;};mboxFactory.prototype.We = function() { if (this.rf) { return; } this.rf = []; var td = this; (function() { var Gf = document.addEventListener ? "DOMContentLoaded" : "onreadystatechange"; var Hf = false; var If = function() { if (Hf) { return; } Hf = true; for (var i = 0; i < td.rf.length; ++i) { td.rf[i](); } }; if (document.addEventListener) { document.addEventListener(Gf, function() { document.removeEventListener(Gf, arguments.callee, false); If(); }, false); window.addEventListener("load", function(){ document.removeEventListener("load", arguments.callee, false); If(); }, false); } else if (document.attachEvent) { if (self !== self.top) { document.attachEvent(Gf, function() { if (document.readyState === 'complete') { document.detachEvent(Gf, arguments.callee); If(); } }); } else { var Jf = function() { try { document.documentElement.doScroll('left'); If(); } catch (Kf) { setTimeout(Jf, 13); } }; Jf(); } } if (document.readyState === "complete") { If(); } })();};mboxScPluginFetcher = function (mb, Lf) { this.mb = mb; this.Lf = Lf;};mboxScPluginFetcher.prototype = { constructor: mboxScPluginFetcher, getType: function () { return 'ajax'; }, fetch: function (Kc) { Kc.setServerType(this.getType()); var Ic = document.getElementsByTagName('head')[0], Lc = document.createElement('script'); Lc.src = this.Mf(Kc); Ic.appendChild(Lc); }, cancel: function () {}, Mf: function (Kc) { Kc.setBasePath('/m2/' + this.mb + '/sc/standard'); this.Nf(Kc); var Of = TNT.a.c.B; var Pf =TNT.a.M.B; Kc.addParameter(Of, Pf); return Kc.buildUrl(); }, Nf: function (Kc) { var Qf = [ "dynamicVariablePrefix", "visitorID", "vmk", "ppu", "charSet", "visitorNamespace", "cookieDomainPeriods", "cookieLifetime", "pageName", "currencyCode", "variableProvider", "channel", "server", "pageType", "transactionID", "purchaseID", "campaign", "state", "zip", "events", "products", "linkName", "linkType", "resolution", "colorDepth", "javascriptVersion", "javaEnabled", "cookiesEnabled", "browserWidth", "browserHeight", "connectionType", "homepage", "pe", "pev1", "pev2", "pev3", "visitorSampling", "visitorSamplingGroup", "dynamicAccountSelection", "dynamicAccountList", "dynamicAccountMatch", "trackDownloadLinks", "trackExternalLinks", "trackInlineStats", "linkLeaveQueryString", "linkDownloadFileTypes", "linkExternalFilters", "linkInternalFilters", "linkTrackVars", "linkTrackEvents", "linkNames", "lnk", "eo" ]; for (var rb = 0; rb < Qf.length; rb++) { this.Rf(Qf[rb], Kc); } for (rb = 1; rb <= 75; rb++) { this.Rf('prop' + rb, Kc); this.Rf('eVar' + rb, Kc); this.Rf('hier' + rb, Kc); } }, Rf: function (qb, Kc) { var W = TNT.a.W, _ = this.Lf[qb]; if (W.bb(_) || W.fb(_)) { return; } Kc.addParameter(qb, _); }};(function(X){ function Sf(Sc, Lf) { if (!Lf) { return null; } var Tf = TNT.a.b.siteCatalystPluginName, mb = TNT.a.b.clientCode, W = TNT.a.W; Lf["m_" + Tf] = function (Lf) { var Uf = '_t', Wf = 'm_i', Xf = Lf[Wf](Tf); Xf.Ue = true; Xf.mb = mb; Xf[Uf] = function () { if (!this.isEnabled()) { return; } var Rc = this.uf(), pe = new mboxScPluginFetcher(this.mb, this.s); if (Rc) { Rc.setFetcher(pe); Rc.load(); } }; Xf.isEnabled = function () { return this.Ue && Sc.isEnabled(); }; Xf.uf = function () { var x = this.Yf(), dd = document.createElement('div'); if (!W.Z(document.body)) { document.body.appendChild(dd); } return Sc.create(x, [], dd); }; Xf.Yf = function () { var Zf = this.s.events && this.s.events.indexOf('purchase') != -1; return 'SiteCatalyst: ' + (Zf ? 'purchase' : 'event'); }; }; return Lf.loadModule(Tf); } X.Sf = Sf;}(TNT.a));(function(X) { function _f(ag, Gd, nd, Id) { if (ag.targetJSLoaded) { return; } Id.setCookie(Gd, true, nd); window.location.reload(); } function bg(b, H, Id) { var cg = '_AT', eg = 50, Gd = H.K, nd = b.experienceManagerDisabledTimeout, be = b.experienceManagerTimeout, u = b.experienceManagerPluginUrl, fg = function(gg) {}, hg = function(gg) { setTimeout(function() { window[cg].applyWhenReady(gg); }, eg); }; if (cg in window) { return; } window[cg] = {}; if (Id.getCookie(Gd) !== 'true') { document.write('<scr' + 'ipt src="' + u + '"><\/sc' + 'ript>'); window[cg].applyWhenReady = hg; setTimeout(function() { _f(window[cg], Gd, nd, Id); }, be); } else { window[cg].applyWhenReady = fg; } } X.bg = bg;}(TNT.a));(function(X, a, W, b, c, M){ function ig() { return b.globalMboxName; } function jg() { return b.globalMboxLocationDomId; } function kg() { return b.globalMboxAutoCreate; } function lg() { return b.parametersFunction(); } function mg() { var ad = 1, ng = document.getElementsByTagName('script'), bd = ng[ng.length - 1]; while (bd) { if (bd.nodeType === ad && bd.className === M.R) { return bd; } bd = bd.previousSibling; } return null; } function og(Sc, x, c) { var tf, Rc; if (a.wc()) { tf = mg(); Rc = Sc.create( x, c, tf); } else { Rc = Sc.create( x, c); } if (Rc && Sc.isEnabled()) { Rc.load(); } return Rc; } function pg(Sc, tf, x, c) { return Sc.vf(x, c, tf); } function qg(Sc, x, c) { Sc.update(x, c); } function rg(Id, qb) { return Id.getCookie(qb); } function sg(Id, qb, _, nd) { Id.setCookie(qb, _, nd); } function tg(ug) { var dc = []; var vg = /([^&=]+)=([^&]*)/g; var wg = decodeURIComponent; var Pd = vg.exec(ug); while (Pd) { dc.push([wg(Pd[1]), wg(Pd[2])].join('=')); Pd = vg.exec(ug); } return dc; } function bc(xg, Oc, ac) { var dc = []; for (var Xb in xg) { if (!xg.hasOwnProperty(Xb)) { continue; } var _ = xg[Xb]; if (W.fb(_)) { Oc.push(Xb); dc = dc.concat(bc(_, Oc, ac)); Oc.pop(); } else { if (Oc.length > 0) { dc.push([ac(Oc.concat(Xb).join('.')), _].join('=')); } else { dc.push([ac(Xb), _].join('=')); } } } return dc; } function yg() { var zg = window.targetPageParams, ac = function(Xb) { return Xb }; if (!W.cb(zg)) { return []; } var dc = null; try { dc = zg(); } catch (Ag) {} if (W.ab(dc)) { return []; } if (W.db(dc)) { return dc; } if (W.eb(dc) && !W.bb(dc)) { return tg(dc); } if (W.fb(dc)) { return bc(dc, [], ac); } return []; } function Bg(Sc) { var Cg = ig(), Dg = jg(), Eg = yg(), Fg, Gg, Hg; if (!Dg) { Dg = "mbox-" + Cg + "-" + mboxGenerateId(); Fg = document.createElement("div"); Fg.className = "mboxDefault"; Fg.id = Dg; Fg.style.visibility = "hidden"; Fg.style.display = "none"; Gg = setInterval(function(){ if (document.body) { clearInterval(Gg); document.body.insertBefore(Fg, document.body.firstChild); } }, b.bodyPollingTimeout); } Hg = Sc.create(Cg, Eg, Dg); if (Hg && Sc.isEnabled()) { if (!Sc.isDomLoaded()) { if (!a.wc()) { Hg.setFetcher(new a.Mc()); } else { Hg.setFetcher(new mboxAjaxFetcher()); } } Hg.load(); } } function Ig(Sc, x, nb) { if (!Sc.isEnabled()) { return; } var wf = new Date(), Jg = wf.getTimezoneOffset() * M.Q, Kc = Sc.getUrlBuilder().clone(); Kc.setBasePath('/m2/' + b.clientCode + '/viztarget'); Kc.addParameter(c.x, x); Kc.addParameter(c.y, 0); Kc.addParameter(c.j, Sc.getMboxes().length() + 1); Kc.addParameter(c.A, wf.getTime() - Jg); Kc.addParameter(c.d, mboxGenerateId()); Kc.addParameter(c.z, Sc.isDomLoaded()); if (nb && nb.length > 0) { Kc.addParameters(nb); } Sc.zf(Kc); Sc.Kg(Kc, x); Sc.Cf(Kc, x); return Kc.buildUrl(); } function Lg() { return new mboxMap(); } function Mg(Ng, mb, Qe) { return new mboxFactory(Ng, mb, Qe); } function Dc() { if (!b.bodyHidingEnabled) { return; } var Ic = document.getElementsByTagName('head')[0]; var Jc = document.createElement('style'); Jc.id = 'at-id-body-style'; Jc.innerHTML = b.bodyHiddenStyle; if (Ic) { Ic.appendChild(Jc); } } function tc() { if (!b.bodyHidingEnabled) { return; } setTimeout(function() { var Ic = document.getElementsByTagName('head')[0]; var Jc = document.getElementById('at-id-body-style'); if (Ic && Jc) { Ic.removeChild(Jc); } }, b.visitorApiPageDisplayTimeout); } a.og = og; a.pg = pg; a.qg = qg; a.Ig = Ig; a.rg = rg; a.sg = sg; a.Bg = Bg; a.Lg = Lg; a.Mg = Mg; a.bc = bc; a.tc = tc; a.Dc = Dc; X.getGlobalMboxName = ig; X.getGlobalMboxLocation = jg; X.isAutoCreateGlobalMbox = kg; X.getClientMboxExtraParameters = lg; X.getTargetPageParameters = yg;}(TNT, TNT.a, TNT.a.W, TNT.a.b, TNT.a.c, TNT.a.M));(function(X){ function Og(Id, b, Pg, Qg) { var Rg = 60 * 60, Sg = mboxGetPageParameter(Pg, true) || Id.getCookie(Qg); if (!Sg) { return; } setTimeout(function() { if (typeof(window.mboxDebugLoaded) === 'undefined') { alert('Could not load the remote debug.\nPlease check your connection to ' + b.companyName + ' servers'); } }, Rg); var Bb = []; Bb.push(b.adminUrl, '/mbox/mbox_debug.jsp', '?'); Bb.push('mboxServerHost', '=', b.serverHost, '&'); Bb.push('clientCode', '=', b.clientCode); document.write('<' + 'scr' + 'ipt src="' + Bb.join('') + '"><' + '\/scr' + 'ipt>'); } function Tg (b, Ug) { var W = X.W, Vg, Wg, _; if (W.Z(b) || W.ab(b) || !W.fb(b)) { return Ug; } for (var Xb in b) { Vg = b.hasOwnProperty(Xb) && Ug.hasOwnProperty(Xb); _ = b[Xb]; Wg = !W.Z(_) && !W.ab(_); if (Vg && Wg) { Ug[Xb] = _; } } return Ug; } function Xg(Sc, Id) { TNT.createGlobalMbox = function() { X.Bg(Sc); }; window.mboxCreate = function(x ) { var c = [].slice.call(arguments, 1); return X.og(Sc, x, c); }; window.mboxDefine = function(tf, x ) { var c = [].slice.call(arguments, 2); return X.pg(Sc, tf, x, c); }; window.mboxUpdate = function(x ) { var c = [].slice.call(arguments, 1); X.qg(Sc, x, c); }; window.mboxVizTargetUrl = function(x ) { var c = [].slice.call(arguments, 1); return X.Ig(Sc, x, c); }; window.mboxSetCookie = function(qb, _, nd) { return X.sg(Id, qb, _, nd); }; window.mboxGetCookie = function(qb) { return X.rg(Id, qb); }; if (typeof(X.Sf) !== 'undefined') { window.mboxLoadSCPlugin = function(Lf) { return X.Sf(Sc, Lf); } } } function Yg() { if (typeof(window.mboxVersion) !== 'undefined') { return; } X.b = Tg(window.targetGlobalSettings, X.b); var b = X.b, Re = b.mboxVersion, Ng = b.serverHost, mb = b.clientCode, N = X.M.N, Pg = X.C.G, Qg = X.H.G, Zg = X.H.L, Sc, Id; window.mboxFactories = X.Lg(); window.mboxFactoryDefault = Sc = X.Mg(Ng, mb, N); window.mboxVersion = Re; Id = Sc.getCookieManager(); Xg(Sc, Id); Og(Id, b, Pg, Qg); X.zb = function(_g) { var lb; if (!b.overrideMboxEdgeServer) { return _g; } lb = Id.getCookie(Zg); return lb === null ? _g : lb; } } X.Yg = Yg;}(TNT.a));TNT.a.Yg();TNT.a.bg(TNT.a.b, TNT.a.H,window.mboxFactoryDefault.getCookieManager());if (TNT.isAutoCreateGlobalMbox()) { TNT.createGlobalMbox();}